env:
    SYSDIG_SECURE_ENDPOINT: "https://us2.app.sysdig.com"
    IMAGE_NAME: "imagebasic"
    BUILD_FOLDER: "app-basic"
    IMAGES_ARRAY: 'nginx:1.25.2-bookworm-perl,redis:7.0,httpd:latest'

name: Scan remote objects with Sysdig
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run:  | 
          docker build \
          -t ${IMAGE_NAME} \
          --build-arg APPFOLDER=${BUILD_FOLDER} \
          .

      - name: Download sysdig-cli-scanner 
        run:  |
          curl -sLO https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt
          mkdir -p ${GITHUB_WORKSPACE}/cache/db/
          if [ ! -f ${GITHUB_WORKSPACE}/cache/latest_version.txt ] || [ $(cat ./latest_version.txt) != $(cat ${GITHUB_WORKSPACE}/cache/latest_version.txt) ]; then
            cp ./latest_version.txt ${GITHUB_WORKSPACE}/cache/latest_version.txt
            curl -sL -o ${GITHUB_WORKSPACE}/cache/sysdig-cli-scanner "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/$(cat ${GITHUB_WORKSPACE}/cache/latest_version.txt)/linux/amd64/sysdig-cli-scanner"
            chmod +x ${GITHUB_WORKSPACE}/cache/sysdig-cli-scanner
          else
            echo "sysdig-cli-scanner latest version already downloaded"
          fi

      - name: Scan the image using sysdig-cli-scanner
        env:
          SECURE_API_TOKEN: ${{ secrets.SECURE_API_TOKEN }}
        run: |
            IFS="," read -a myarray <<< ${{ env.IMAGES_ARRAY }}
            for i in "${myarray[@]}"; do
              ${GITHUB_WORKSPACE}/cache/sysdig-cli-scanner \
                --apiurl ${SYSDIG_SECURE_ENDPOINT} \
                pull://${i} \
                --console-log \
                --dbpath=${GITHUB_WORKSPACE}/cache/db/ \
                --cachepath=${GITHUB_WORKSPACE}/cache/scanner-cache/ || continue
              echo "Image: $i scanned"
            done
        continue-on-error: true
